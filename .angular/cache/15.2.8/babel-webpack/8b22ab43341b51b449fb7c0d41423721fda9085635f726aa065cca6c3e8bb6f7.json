{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class UserService {\n  constructor() {}\n  addUSer(user) {\n    let userArray = [];\n    if (localStorage.getItem('Users')) {\n      let user1 = localStorage.getItem('Users');\n      userArray = JSON.parse(user1);\n      userArray = [user, ...userArray];\n    } else {\n      userArray = [user];\n    }\n    localStorage.setItem('Users', JSON.stringify(userArray));\n  }\n}\nUserService.ɵfac = function UserService_Factory(t) {\n  return new (t || UserService)();\n};\nUserService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UserService,\n  factory: UserService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";AAMA,OAAM,MAAOA,WAAW;EAEtBC,eAAgB;EAGhBC,OAAO,CAACC,IAAU;IAChB,IAAIC,SAAS,GAAG,EAAE;IAElB,IAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,EAAE;MAChC,IAAIC,KAAK,GAASF,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC/CF,SAAS,GAAGI,IAAI,CAACC,KAAK,CAACF,KAAK,CAAC;MAC7BH,SAAS,GAAG,CAACD,IAAI,EAAE,GAAGC,SAAS,CAAC;KACjC,MAAM;MACLA,SAAS,GAAG,CAACD,IAAI,CAAC;;IAEpBE,YAAY,CAACK,OAAO,CAAC,OAAO,EAACF,IAAI,CAACG,SAAS,CAACP,SAAS,CAAC,CAAC;EAEzD;;;mBAjBWJ,WAAW;AAAA;;SAAXA,WAAW;EAAAY,SAAXZ,WAAW;EAAAa,YAFV;AAAM","names":["UserService","constructor","addUSer","user","userArray","localStorage","getItem","user1","JSON","parse","setItem","stringify","factory","providedIn"],"sourceRoot":"","sources":["C:\\AmolP\\SCM_ANGULAR\\HealthIssue-Manager\\src\\app\\services\\user.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { User } from '../model/user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  constructor() { }\n\n\n  addUSer(user: User){\n    let userArray = [];\n\n    if(localStorage.getItem('Users')) {\n      let user1 : any = localStorage.getItem('Users');\n      userArray = JSON.parse(user1);\n      userArray = [user, ...userArray]\n    } else {\n      userArray = [user];\n    }\n    localStorage.setItem('Users',JSON.stringify(userArray));\n\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}