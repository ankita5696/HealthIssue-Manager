{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class AuthService {\n  constructor() {}\n  authUser(user) {\n    let userArray = [];\n    if (localStorage.getItem('Users')) {\n      let user1 = localStorage.getItem('Users');\n      userArray = JSON.parse(user1);\n    }\n    return userArray.find(p => p.userName === user.userName && p.password === user.password);\n  }\n}\nAuthService.ɵfac = function AuthService_Factory(t) {\n  return new (t || AuthService)();\n};\nAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthService,\n  factory: AuthService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";AAKA,OAAM,MAAOA,WAAW;EAEtBC,eAAgB;EAEhBC,QAAQ,CAACC,IAAS;IAChB,IAAIC,SAAS,GAAG,EAAE;IAElB,IAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,EAAE;MAChC,IAAIC,KAAK,GAASF,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC/CF,SAAS,GAAGI,IAAI,CAACC,KAAK,CAACF,KAAK,CAAC;;IAE/B,OAAOH,SAAS,CAACM,IAAI,CAAEC,CAAoC,IAAKA,CAAC,CAACC,QAAQ,KAAKT,IAAI,CAACS,QAAQ,IAAID,CAAC,CAACE,QAAQ,KAAKV,IAAI,CAACU,QAAQ,CAAC;EAC/H;;;mBAZWb,WAAW;AAAA;;SAAXA,WAAW;EAAAc,SAAXd,WAAW;EAAAe,YAFV;AAAM","names":["AuthService","constructor","authUser","user","userArray","localStorage","getItem","user1","JSON","parse","find","p","userName","password","factory","providedIn"],"sourceRoot":"","sources":["C:\\AmolP\\SCM_ANGULAR\\HealthIssue-Manager\\src\\app\\services\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  constructor() { }\n\n  authUser(user: any){\n    let userArray = [];\n\n    if(localStorage.getItem('Users')) {\n      let user1 : any = localStorage.getItem('Users');\n      userArray = JSON.parse(user1);\n    }\n    return userArray.find((p: { userName: any; password: any; }) => p.userName === user.userName && p.password === user.password);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}